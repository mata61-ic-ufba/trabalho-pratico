Terminals unused in grammar

    ERROR


Grammar

    0 $accept: program $end

    1 program: classes

    2 classes: class ';'
    3        | classes class ';'

    4 class: T_class TYPE opt_inherits '{' features '}'

    5 opt_inherits: %empty
    6             | T_inherits TYPE

    7 features: %empty
    8         | features feature ';'

    9 feature: ID '(' ')' ':' TYPE '{' expr '}'
   10        | ID '(' formal_list ')' ':' TYPE '{' expr '}'
   11        | ID ':' TYPE
   12        | ID ':' TYPE T_atrib expr

   13 formal_list: ID ':' TYPE
   14            | formal_list ',' ID ':' TYPE

   15 expr: ID T_atrib expr
   16     | expr '.' ID '(' ')'
   17     | expr '@' TYPE '.' ID '(' ')'
   18     | expr '.' ID '(' expr_list ')'
   19     | expr '@' TYPE '.' ID '(' expr_list ')'
   20     | ID '(' ')'
   21     | ID '(' expr_list ')'
   22     | T_if expr T_then expr T_else expr T_fi
   23     | T_while expr T_loop expr T_pool
   24     | '{' expr_stmt '}'
   25     | T_let ID ':' TYPE let_atrib let_stmt T_in expr
   26     | T_case expr T_of case_stmt T_esac
   27     | T_new TYPE
   28     | T_isvoid expr
   29     | expr '+' expr
   30     | expr '-' expr
   31     | expr '*' expr
   32     | expr '/' expr
   33     | expr EQ expr
   34     | expr LT expr
   35     | expr LTE expr
   36     | T_not expr
   37     | '(' expr ')'
   38     | ID
   39     | NUM
   40     | STRING
   41     | T_true
   42     | T_false
   43     | T_let

   44 expr_list: expr
   45          | expr_list ',' expr

   46 expr_stmt: expr ';'
   47          | expr_stmt expr ';'

   48 let_atrib: %empty
   49          | T_atrib expr

   50 let_stmt: %empty
   51         | ',' ID ':' TYPE let_atrib let_stmt

   52 case_stmt: ID ':' TYPE T_impl expr ';'
   53          | case_stmt ID ':' TYPE T_impl expr ';'


Terminals, with rules where they appear

    $end (0) 0
    '(' (40) 9 10 16 17 18 19 20 21 37
    ')' (41) 9 10 16 17 18 19 20 21 37
    '*' (42) 31
    '+' (43) 29
    ',' (44) 14 45 51
    '-' (45) 30
    '.' (46) 16 17 18 19
    '/' (47) 32
    ':' (58) 9 10 11 12 13 14 25 51 52 53
    ';' (59) 2 3 8 46 47 52 53
    '@' (64) 17 19
    '{' (123) 4 9 10 24
    '}' (125) 4 9 10 24
    error (256)
    ID (258) 9 10 11 12 13 14 15 16 17 18 19 20 21 25 38 51 52 53
    STRING (259) 40
    NUM (260) 39
    TYPE (261) 4 6 9 10 11 12 13 14 17 19 25 27 51 52 53
    EQ (262) 33
    LT (263) 34
    LTE (264) 35
    T_atrib (265) 12 15 49
    T_impl (266) 52 53
    T_true (267) 41
    T_false (268) 42
    T_class (269) 4
    T_else (270) 22
    T_while (271) 23
    T_if (272) 22
    T_fi (273) 22
    T_then (274) 22
    T_inherits (275) 6
    T_isvoid (276) 28
    T_new (277) 27
    T_not (278) 36
    T_pool (279) 23
    T_loop (280) 23
    T_let (281) 25 43
    T_case (282) 26
    T_esac (283) 26
    T_of (284) 26
    T_in (285) 25
    ERROR (286)


Nonterminals, with rules where they appear

    $accept (45)
        on left: 0
    program (46)
        on left: 1
        on right: 0
    classes (47)
        on left: 2 3
        on right: 1 3
    class (48)
        on left: 4
        on right: 2 3
    opt_inherits (49)
        on left: 5 6
        on right: 4
    features (50)
        on left: 7 8
        on right: 4 8
    feature (51)
        on left: 9 10 11 12
        on right: 8
    formal_list (52)
        on left: 13 14
        on right: 10 14
    expr (53)
        on left: 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43
        on right: 9 10 12 15 16 17 18 19 22 23 25 26 28 29 30 31 32 33 34 35 36 37 44 45 46 47 49 52 53
    expr_list (54)
        on left: 44 45
        on right: 18 19 21 45
    expr_stmt (55)
        on left: 46 47
        on right: 24 47
    let_atrib (56)
        on left: 48 49
        on right: 25 51
    let_stmt (57)
        on left: 50 51
        on right: 25 51
    case_stmt (58)
        on left: 52 53
        on right: 26 53


State 0

    0 $accept: . program $end

    T_class  shift, and go to state 1

    program  go to state 2
    classes  go to state 3
    class    go to state 4


State 1

    4 class: T_class . TYPE opt_inherits '{' features '}'

    TYPE  shift, and go to state 5


State 2

    0 $accept: program . $end

    $end  shift, and go to state 6


State 3

    1 program: classes .
    3 classes: classes . class ';'

    T_class  shift, and go to state 1

    $default  reduce using rule 1 (program)

    class  go to state 7


State 4

    2 classes: class . ';'

    ';'  shift, and go to state 8


State 5

    4 class: T_class TYPE . opt_inherits '{' features '}'

    T_inherits  shift, and go to state 9

    $default  reduce using rule 5 (opt_inherits)

    opt_inherits  go to state 10


State 6

    0 $accept: program $end .

    $default  accept


State 7

    3 classes: classes class . ';'

    ';'  shift, and go to state 11


State 8

    2 classes: class ';' .

    $default  reduce using rule 2 (classes)


State 9

    6 opt_inherits: T_inherits . TYPE

    TYPE  shift, and go to state 12


State 10

    4 class: T_class TYPE opt_inherits . '{' features '}'

    '{'  shift, and go to state 13


State 11

    3 classes: classes class ';' .

    $default  reduce using rule 3 (classes)


State 12

    6 opt_inherits: T_inherits TYPE .

    $default  reduce using rule 6 (opt_inherits)


State 13

    4 class: T_class TYPE opt_inherits '{' . features '}'

    $default  reduce using rule 7 (features)

    features  go to state 14


State 14

    4 class: T_class TYPE opt_inherits '{' features . '}'
    8 features: features . feature ';'

    ID   shift, and go to state 15
    '}'  shift, and go to state 16

    feature  go to state 17


State 15

    9 feature: ID . '(' ')' ':' TYPE '{' expr '}'
   10        | ID . '(' formal_list ')' ':' TYPE '{' expr '}'
   11        | ID . ':' TYPE
   12        | ID . ':' TYPE T_atrib expr

    '('  shift, and go to state 18
    ':'  shift, and go to state 19


State 16

    4 class: T_class TYPE opt_inherits '{' features '}' .

    $default  reduce using rule 4 (class)


State 17

    8 features: features feature . ';'

    ';'  shift, and go to state 20


State 18

    9 feature: ID '(' . ')' ':' TYPE '{' expr '}'
   10        | ID '(' . formal_list ')' ':' TYPE '{' expr '}'

    ID   shift, and go to state 21
    ')'  shift, and go to state 22

    formal_list  go to state 23


State 19

   11 feature: ID ':' . TYPE
   12        | ID ':' . TYPE T_atrib expr

    TYPE  shift, and go to state 24


State 20

    8 features: features feature ';' .

    $default  reduce using rule 8 (features)


State 21

   13 formal_list: ID . ':' TYPE

    ':'  shift, and go to state 25


State 22

    9 feature: ID '(' ')' . ':' TYPE '{' expr '}'

    ':'  shift, and go to state 26


State 23

   10 feature: ID '(' formal_list . ')' ':' TYPE '{' expr '}'
   14 formal_list: formal_list . ',' ID ':' TYPE

    ')'  shift, and go to state 27
    ','  shift, and go to state 28


State 24

   11 feature: ID ':' TYPE .
   12        | ID ':' TYPE . T_atrib expr

    T_atrib  shift, and go to state 29

    $default  reduce using rule 11 (feature)


State 25

   13 formal_list: ID ':' . TYPE

    TYPE  shift, and go to state 30


State 26

    9 feature: ID '(' ')' ':' . TYPE '{' expr '}'

    TYPE  shift, and go to state 31


State 27

   10 feature: ID '(' formal_list ')' . ':' TYPE '{' expr '}'

    ':'  shift, and go to state 32


State 28

   14 formal_list: formal_list ',' . ID ':' TYPE

    ID  shift, and go to state 33


State 29

   12 feature: ID ':' TYPE T_atrib . expr

    ID        shift, and go to state 34
    STRING    shift, and go to state 35
    NUM       shift, and go to state 36
    T_true    shift, and go to state 37
    T_false   shift, and go to state 38
    T_while   shift, and go to state 39
    T_if      shift, and go to state 40
    T_isvoid  shift, and go to state 41
    T_new     shift, and go to state 42
    T_not     shift, and go to state 43
    T_let     shift, and go to state 44
    T_case    shift, and go to state 45
    '{'       shift, and go to state 46
    '('       shift, and go to state 47

    expr  go to state 48


State 30

   13 formal_list: ID ':' TYPE .

    $default  reduce using rule 13 (formal_list)


State 31

    9 feature: ID '(' ')' ':' TYPE . '{' expr '}'

    '{'  shift, and go to state 49


State 32

   10 feature: ID '(' formal_list ')' ':' . TYPE '{' expr '}'

    TYPE  shift, and go to state 50


State 33

   14 formal_list: formal_list ',' ID . ':' TYPE

    ':'  shift, and go to state 51


State 34

   15 expr: ID . T_atrib expr
   20     | ID . '(' ')'
   21     | ID . '(' expr_list ')'
   38     | ID .

    T_atrib  shift, and go to state 52
    '('      shift, and go to state 53

    $default  reduce using rule 38 (expr)


State 35

   40 expr: STRING .

    $default  reduce using rule 40 (expr)


State 36

   39 expr: NUM .

    $default  reduce using rule 39 (expr)


State 37

   41 expr: T_true .

    $default  reduce using rule 41 (expr)


State 38

   42 expr: T_false .

    $default  reduce using rule 42 (expr)


State 39

   23 expr: T_while . expr T_loop expr T_pool

    ID        shift, and go to state 34
    STRING    shift, and go to state 35
    NUM       shift, and go to state 36
    T_true    shift, and go to state 37
    T_false   shift, and go to state 38
    T_while   shift, and go to state 39
    T_if      shift, and go to state 40
    T_isvoid  shift, and go to state 41
    T_new     shift, and go to state 42
    T_not     shift, and go to state 43
    T_let     shift, and go to state 44
    T_case    shift, and go to state 45
    '{'       shift, and go to state 46
    '('       shift, and go to state 47

    expr  go to state 54


State 40

   22 expr: T_if . expr T_then expr T_else expr T_fi

    ID        shift, and go to state 34
    STRING    shift, and go to state 35
    NUM       shift, and go to state 36
    T_true    shift, and go to state 37
    T_false   shift, and go to state 38
    T_while   shift, and go to state 39
    T_if      shift, and go to state 40
    T_isvoid  shift, and go to state 41
    T_new     shift, and go to state 42
    T_not     shift, and go to state 43
    T_let     shift, and go to state 44
    T_case    shift, and go to state 45
    '{'       shift, and go to state 46
    '('       shift, and go to state 47

    expr  go to state 55


State 41

   28 expr: T_isvoid . expr

    ID        shift, and go to state 34
    STRING    shift, and go to state 35
    NUM       shift, and go to state 36
    T_true    shift, and go to state 37
    T_false   shift, and go to state 38
    T_while   shift, and go to state 39
    T_if      shift, and go to state 40
    T_isvoid  shift, and go to state 41
    T_new     shift, and go to state 42
    T_not     shift, and go to state 43
    T_let     shift, and go to state 44
    T_case    shift, and go to state 45
    '{'       shift, and go to state 46
    '('       shift, and go to state 47

    expr  go to state 56


State 42

   27 expr: T_new . TYPE

    TYPE  shift, and go to state 57


State 43

   36 expr: T_not . expr

    ID        shift, and go to state 34
    STRING    shift, and go to state 35
    NUM       shift, and go to state 36
    T_true    shift, and go to state 37
    T_false   shift, and go to state 38
    T_while   shift, and go to state 39
    T_if      shift, and go to state 40
    T_isvoid  shift, and go to state 41
    T_new     shift, and go to state 42
    T_not     shift, and go to state 43
    T_let     shift, and go to state 44
    T_case    shift, and go to state 45
    '{'       shift, and go to state 46
    '('       shift, and go to state 47

    expr  go to state 58


State 44

   25 expr: T_let . ID ':' TYPE let_atrib let_stmt T_in expr
   43     | T_let .

    ID  shift, and go to state 59

    $default  reduce using rule 43 (expr)


State 45

   26 expr: T_case . expr T_of case_stmt T_esac

    ID        shift, and go to state 34
    STRING    shift, and go to state 35
    NUM       shift, and go to state 36
    T_true    shift, and go to state 37
    T_false   shift, and go to state 38
    T_while   shift, and go to state 39
    T_if      shift, and go to state 40
    T_isvoid  shift, and go to state 41
    T_new     shift, and go to state 42
    T_not     shift, and go to state 43
    T_let     shift, and go to state 44
    T_case    shift, and go to state 45
    '{'       shift, and go to state 46
    '('       shift, and go to state 47

    expr  go to state 60


State 46

   24 expr: '{' . expr_stmt '}'

    ID        shift, and go to state 34
    STRING    shift, and go to state 35
    NUM       shift, and go to state 36
    T_true    shift, and go to state 37
    T_false   shift, and go to state 38
    T_while   shift, and go to state 39
    T_if      shift, and go to state 40
    T_isvoid  shift, and go to state 41
    T_new     shift, and go to state 42
    T_not     shift, and go to state 43
    T_let     shift, and go to state 44
    T_case    shift, and go to state 45
    '{'       shift, and go to state 46
    '('       shift, and go to state 47

    expr       go to state 61
    expr_stmt  go to state 62


State 47

   37 expr: '(' . expr ')'

    ID        shift, and go to state 34
    STRING    shift, and go to state 35
    NUM       shift, and go to state 36
    T_true    shift, and go to state 37
    T_false   shift, and go to state 38
    T_while   shift, and go to state 39
    T_if      shift, and go to state 40
    T_isvoid  shift, and go to state 41
    T_new     shift, and go to state 42
    T_not     shift, and go to state 43
    T_let     shift, and go to state 44
    T_case    shift, and go to state 45
    '{'       shift, and go to state 46
    '('       shift, and go to state 47

    expr  go to state 63


State 48

   12 feature: ID ':' TYPE T_atrib expr .
   16 expr: expr . '.' ID '(' ')'
   17     | expr . '@' TYPE '.' ID '(' ')'
   18     | expr . '.' ID '(' expr_list ')'
   19     | expr . '@' TYPE '.' ID '(' expr_list ')'
   29     | expr . '+' expr
   30     | expr . '-' expr
   31     | expr . '*' expr
   32     | expr . '/' expr
   33     | expr . EQ expr
   34     | expr . LT expr
   35     | expr . LTE expr

    EQ   shift, and go to state 64
    LT   shift, and go to state 65
    LTE  shift, and go to state 66
    '+'  shift, and go to state 67
    '-'  shift, and go to state 68
    '*'  shift, and go to state 69
    '/'  shift, and go to state 70
    '@'  shift, and go to state 71
    '.'  shift, and go to state 72

    $default  reduce using rule 12 (feature)


State 49

    9 feature: ID '(' ')' ':' TYPE '{' . expr '}'

    ID        shift, and go to state 34
    STRING    shift, and go to state 35
    NUM       shift, and go to state 36
    T_true    shift, and go to state 37
    T_false   shift, and go to state 38
    T_while   shift, and go to state 39
    T_if      shift, and go to state 40
    T_isvoid  shift, and go to state 41
    T_new     shift, and go to state 42
    T_not     shift, and go to state 43
    T_let     shift, and go to state 44
    T_case    shift, and go to state 45
    '{'       shift, and go to state 46
    '('       shift, and go to state 47

    expr  go to state 73


State 50

   10 feature: ID '(' formal_list ')' ':' TYPE . '{' expr '}'

    '{'  shift, and go to state 74


State 51

   14 formal_list: formal_list ',' ID ':' . TYPE

    TYPE  shift, and go to state 75


State 52

   15 expr: ID T_atrib . expr

    ID        shift, and go to state 34
    STRING    shift, and go to state 35
    NUM       shift, and go to state 36
    T_true    shift, and go to state 37
    T_false   shift, and go to state 38
    T_while   shift, and go to state 39
    T_if      shift, and go to state 40
    T_isvoid  shift, and go to state 41
    T_new     shift, and go to state 42
    T_not     shift, and go to state 43
    T_let     shift, and go to state 44
    T_case    shift, and go to state 45
    '{'       shift, and go to state 46
    '('       shift, and go to state 47

    expr  go to state 76


State 53

   20 expr: ID '(' . ')'
   21     | ID '(' . expr_list ')'

    ID        shift, and go to state 34
    STRING    shift, and go to state 35
    NUM       shift, and go to state 36
    T_true    shift, and go to state 37
    T_false   shift, and go to state 38
    T_while   shift, and go to state 39
    T_if      shift, and go to state 40
    T_isvoid  shift, and go to state 41
    T_new     shift, and go to state 42
    T_not     shift, and go to state 43
    T_let     shift, and go to state 44
    T_case    shift, and go to state 45
    '{'       shift, and go to state 46
    '('       shift, and go to state 47
    ')'       shift, and go to state 77

    expr       go to state 78
    expr_list  go to state 79


State 54

   16 expr: expr . '.' ID '(' ')'
   17     | expr . '@' TYPE '.' ID '(' ')'
   18     | expr . '.' ID '(' expr_list ')'
   19     | expr . '@' TYPE '.' ID '(' expr_list ')'
   23     | T_while expr . T_loop expr T_pool
   29     | expr . '+' expr
   30     | expr . '-' expr
   31     | expr . '*' expr
   32     | expr . '/' expr
   33     | expr . EQ expr
   34     | expr . LT expr
   35     | expr . LTE expr

    EQ      shift, and go to state 64
    LT      shift, and go to state 65
    LTE     shift, and go to state 66
    T_loop  shift, and go to state 80
    '+'     shift, and go to state 67
    '-'     shift, and go to state 68
    '*'     shift, and go to state 69
    '/'     shift, and go to state 70
    '@'     shift, and go to state 71
    '.'     shift, and go to state 72


State 55

   16 expr: expr . '.' ID '(' ')'
   17     | expr . '@' TYPE '.' ID '(' ')'
   18     | expr . '.' ID '(' expr_list ')'
   19     | expr . '@' TYPE '.' ID '(' expr_list ')'
   22     | T_if expr . T_then expr T_else expr T_fi
   29     | expr . '+' expr
   30     | expr . '-' expr
   31     | expr . '*' expr
   32     | expr . '/' expr
   33     | expr . EQ expr
   34     | expr . LT expr
   35     | expr . LTE expr

    EQ      shift, and go to state 64
    LT      shift, and go to state 65
    LTE     shift, and go to state 66
    T_then  shift, and go to state 81
    '+'     shift, and go to state 67
    '-'     shift, and go to state 68
    '*'     shift, and go to state 69
    '/'     shift, and go to state 70
    '@'     shift, and go to state 71
    '.'     shift, and go to state 72


State 56

   16 expr: expr . '.' ID '(' ')'
   17     | expr . '@' TYPE '.' ID '(' ')'
   18     | expr . '.' ID '(' expr_list ')'
   19     | expr . '@' TYPE '.' ID '(' expr_list ')'
   28     | T_isvoid expr .
   29     | expr . '+' expr
   30     | expr . '-' expr
   31     | expr . '*' expr
   32     | expr . '/' expr
   33     | expr . EQ expr
   34     | expr . LT expr
   35     | expr . LTE expr

    EQ   shift, and go to state 64
    LT   shift, and go to state 65
    LTE  shift, and go to state 66
    '+'  shift, and go to state 67
    '-'  shift, and go to state 68
    '*'  shift, and go to state 69
    '/'  shift, and go to state 70
    '@'  shift, and go to state 71
    '.'  shift, and go to state 72

    $default  reduce using rule 28 (expr)


State 57

   27 expr: T_new TYPE .

    $default  reduce using rule 27 (expr)


State 58

   16 expr: expr . '.' ID '(' ')'
   17     | expr . '@' TYPE '.' ID '(' ')'
   18     | expr . '.' ID '(' expr_list ')'
   19     | expr . '@' TYPE '.' ID '(' expr_list ')'
   29     | expr . '+' expr
   30     | expr . '-' expr
   31     | expr . '*' expr
   32     | expr . '/' expr
   33     | expr . EQ expr
   34     | expr . LT expr
   35     | expr . LTE expr
   36     | T_not expr .

    EQ   shift, and go to state 64
    LT   shift, and go to state 65
    LTE  shift, and go to state 66
    '+'  shift, and go to state 67
    '-'  shift, and go to state 68
    '*'  shift, and go to state 69
    '/'  shift, and go to state 70
    '@'  shift, and go to state 71
    '.'  shift, and go to state 72

    $default  reduce using rule 36 (expr)


State 59

   25 expr: T_let ID . ':' TYPE let_atrib let_stmt T_in expr

    ':'  shift, and go to state 82


State 60

   16 expr: expr . '.' ID '(' ')'
   17     | expr . '@' TYPE '.' ID '(' ')'
   18     | expr . '.' ID '(' expr_list ')'
   19     | expr . '@' TYPE '.' ID '(' expr_list ')'
   26     | T_case expr . T_of case_stmt T_esac
   29     | expr . '+' expr
   30     | expr . '-' expr
   31     | expr . '*' expr
   32     | expr . '/' expr
   33     | expr . EQ expr
   34     | expr . LT expr
   35     | expr . LTE expr

    EQ    shift, and go to state 64
    LT    shift, and go to state 65
    LTE   shift, and go to state 66
    T_of  shift, and go to state 83
    '+'   shift, and go to state 67
    '-'   shift, and go to state 68
    '*'   shift, and go to state 69
    '/'   shift, and go to state 70
    '@'   shift, and go to state 71
    '.'   shift, and go to state 72


State 61

   16 expr: expr . '.' ID '(' ')'
   17     | expr . '@' TYPE '.' ID '(' ')'
   18     | expr . '.' ID '(' expr_list ')'
   19     | expr . '@' TYPE '.' ID '(' expr_list ')'
   29     | expr . '+' expr
   30     | expr . '-' expr
   31     | expr . '*' expr
   32     | expr . '/' expr
   33     | expr . EQ expr
   34     | expr . LT expr
   35     | expr . LTE expr
   46 expr_stmt: expr . ';'

    EQ   shift, and go to state 64
    LT   shift, and go to state 65
    LTE  shift, and go to state 66
    '+'  shift, and go to state 67
    '-'  shift, and go to state 68
    '*'  shift, and go to state 69
    '/'  shift, and go to state 70
    '@'  shift, and go to state 71
    '.'  shift, and go to state 72
    ';'  shift, and go to state 84


State 62

   24 expr: '{' expr_stmt . '}'
   47 expr_stmt: expr_stmt . expr ';'

    ID        shift, and go to state 34
    STRING    shift, and go to state 35
    NUM       shift, and go to state 36
    T_true    shift, and go to state 37
    T_false   shift, and go to state 38
    T_while   shift, and go to state 39
    T_if      shift, and go to state 40
    T_isvoid  shift, and go to state 41
    T_new     shift, and go to state 42
    T_not     shift, and go to state 43
    T_let     shift, and go to state 44
    T_case    shift, and go to state 45
    '{'       shift, and go to state 46
    '}'       shift, and go to state 85
    '('       shift, and go to state 47

    expr  go to state 86


State 63

   16 expr: expr . '.' ID '(' ')'
   17     | expr . '@' TYPE '.' ID '(' ')'
   18     | expr . '.' ID '(' expr_list ')'
   19     | expr . '@' TYPE '.' ID '(' expr_list ')'
   29     | expr . '+' expr
   30     | expr . '-' expr
   31     | expr . '*' expr
   32     | expr . '/' expr
   33     | expr . EQ expr
   34     | expr . LT expr
   35     | expr . LTE expr
   37     | '(' expr . ')'

    EQ   shift, and go to state 64
    LT   shift, and go to state 65
    LTE  shift, and go to state 66
    '+'  shift, and go to state 67
    '-'  shift, and go to state 68
    '*'  shift, and go to state 69
    '/'  shift, and go to state 70
    '@'  shift, and go to state 71
    '.'  shift, and go to state 72
    ')'  shift, and go to state 87


State 64

   33 expr: expr EQ . expr

    ID        shift, and go to state 34
    STRING    shift, and go to state 35
    NUM       shift, and go to state 36
    T_true    shift, and go to state 37
    T_false   shift, and go to state 38
    T_while   shift, and go to state 39
    T_if      shift, and go to state 40
    T_isvoid  shift, and go to state 41
    T_new     shift, and go to state 42
    T_not     shift, and go to state 43
    T_let     shift, and go to state 44
    T_case    shift, and go to state 45
    '{'       shift, and go to state 46
    '('       shift, and go to state 47

    expr  go to state 88


State 65

   34 expr: expr LT . expr

    ID        shift, and go to state 34
    STRING    shift, and go to state 35
    NUM       shift, and go to state 36
    T_true    shift, and go to state 37
    T_false   shift, and go to state 38
    T_while   shift, and go to state 39
    T_if      shift, and go to state 40
    T_isvoid  shift, and go to state 41
    T_new     shift, and go to state 42
    T_not     shift, and go to state 43
    T_let     shift, and go to state 44
    T_case    shift, and go to state 45
    '{'       shift, and go to state 46
    '('       shift, and go to state 47

    expr  go to state 89


State 66

   35 expr: expr LTE . expr

    ID        shift, and go to state 34
    STRING    shift, and go to state 35
    NUM       shift, and go to state 36
    T_true    shift, and go to state 37
    T_false   shift, and go to state 38
    T_while   shift, and go to state 39
    T_if      shift, and go to state 40
    T_isvoid  shift, and go to state 41
    T_new     shift, and go to state 42
    T_not     shift, and go to state 43
    T_let     shift, and go to state 44
    T_case    shift, and go to state 45
    '{'       shift, and go to state 46
    '('       shift, and go to state 47

    expr  go to state 90


State 67

   29 expr: expr '+' . expr

    ID        shift, and go to state 34
    STRING    shift, and go to state 35
    NUM       shift, and go to state 36
    T_true    shift, and go to state 37
    T_false   shift, and go to state 38
    T_while   shift, and go to state 39
    T_if      shift, and go to state 40
    T_isvoid  shift, and go to state 41
    T_new     shift, and go to state 42
    T_not     shift, and go to state 43
    T_let     shift, and go to state 44
    T_case    shift, and go to state 45
    '{'       shift, and go to state 46
    '('       shift, and go to state 47

    expr  go to state 91


State 68

   30 expr: expr '-' . expr

    ID        shift, and go to state 34
    STRING    shift, and go to state 35
    NUM       shift, and go to state 36
    T_true    shift, and go to state 37
    T_false   shift, and go to state 38
    T_while   shift, and go to state 39
    T_if      shift, and go to state 40
    T_isvoid  shift, and go to state 41
    T_new     shift, and go to state 42
    T_not     shift, and go to state 43
    T_let     shift, and go to state 44
    T_case    shift, and go to state 45
    '{'       shift, and go to state 46
    '('       shift, and go to state 47

    expr  go to state 92


State 69

   31 expr: expr '*' . expr

    ID        shift, and go to state 34
    STRING    shift, and go to state 35
    NUM       shift, and go to state 36
    T_true    shift, and go to state 37
    T_false   shift, and go to state 38
    T_while   shift, and go to state 39
    T_if      shift, and go to state 40
    T_isvoid  shift, and go to state 41
    T_new     shift, and go to state 42
    T_not     shift, and go to state 43
    T_let     shift, and go to state 44
    T_case    shift, and go to state 45
    '{'       shift, and go to state 46
    '('       shift, and go to state 47

    expr  go to state 93


State 70

   32 expr: expr '/' . expr

    ID        shift, and go to state 34
    STRING    shift, and go to state 35
    NUM       shift, and go to state 36
    T_true    shift, and go to state 37
    T_false   shift, and go to state 38
    T_while   shift, and go to state 39
    T_if      shift, and go to state 40
    T_isvoid  shift, and go to state 41
    T_new     shift, and go to state 42
    T_not     shift, and go to state 43
    T_let     shift, and go to state 44
    T_case    shift, and go to state 45
    '{'       shift, and go to state 46
    '('       shift, and go to state 47

    expr  go to state 94


State 71

   17 expr: expr '@' . TYPE '.' ID '(' ')'
   19     | expr '@' . TYPE '.' ID '(' expr_list ')'

    TYPE  shift, and go to state 95


State 72

   16 expr: expr '.' . ID '(' ')'
   18     | expr '.' . ID '(' expr_list ')'

    ID  shift, and go to state 96


State 73

    9 feature: ID '(' ')' ':' TYPE '{' expr . '}'
   16 expr: expr . '.' ID '(' ')'
   17     | expr . '@' TYPE '.' ID '(' ')'
   18     | expr . '.' ID '(' expr_list ')'
   19     | expr . '@' TYPE '.' ID '(' expr_list ')'
   29     | expr . '+' expr
   30     | expr . '-' expr
   31     | expr . '*' expr
   32     | expr . '/' expr
   33     | expr . EQ expr
   34     | expr . LT expr
   35     | expr . LTE expr

    EQ   shift, and go to state 64
    LT   shift, and go to state 65
    LTE  shift, and go to state 66
    '+'  shift, and go to state 67
    '-'  shift, and go to state 68
    '*'  shift, and go to state 69
    '/'  shift, and go to state 70
    '@'  shift, and go to state 71
    '.'  shift, and go to state 72
    '}'  shift, and go to state 97


State 74

   10 feature: ID '(' formal_list ')' ':' TYPE '{' . expr '}'

    ID        shift, and go to state 34
    STRING    shift, and go to state 35
    NUM       shift, and go to state 36
    T_true    shift, and go to state 37
    T_false   shift, and go to state 38
    T_while   shift, and go to state 39
    T_if      shift, and go to state 40
    T_isvoid  shift, and go to state 41
    T_new     shift, and go to state 42
    T_not     shift, and go to state 43
    T_let     shift, and go to state 44
    T_case    shift, and go to state 45
    '{'       shift, and go to state 46
    '('       shift, and go to state 47

    expr  go to state 98


State 75

   14 formal_list: formal_list ',' ID ':' TYPE .

    $default  reduce using rule 14 (formal_list)


State 76

   15 expr: ID T_atrib expr .
   16     | expr . '.' ID '(' ')'
   17     | expr . '@' TYPE '.' ID '(' ')'
   18     | expr . '.' ID '(' expr_list ')'
   19     | expr . '@' TYPE '.' ID '(' expr_list ')'
   29     | expr . '+' expr
   30     | expr . '-' expr
   31     | expr . '*' expr
   32     | expr . '/' expr
   33     | expr . EQ expr
   34     | expr . LT expr
   35     | expr . LTE expr

    EQ   shift, and go to state 64
    LT   shift, and go to state 65
    LTE  shift, and go to state 66
    '+'  shift, and go to state 67
    '-'  shift, and go to state 68
    '*'  shift, and go to state 69
    '/'  shift, and go to state 70
    '@'  shift, and go to state 71
    '.'  shift, and go to state 72

    $default  reduce using rule 15 (expr)


State 77

   20 expr: ID '(' ')' .

    $default  reduce using rule 20 (expr)


State 78

   16 expr: expr . '.' ID '(' ')'
   17     | expr . '@' TYPE '.' ID '(' ')'
   18     | expr . '.' ID '(' expr_list ')'
   19     | expr . '@' TYPE '.' ID '(' expr_list ')'
   29     | expr . '+' expr
   30     | expr . '-' expr
   31     | expr . '*' expr
   32     | expr . '/' expr
   33     | expr . EQ expr
   34     | expr . LT expr
   35     | expr . LTE expr
   44 expr_list: expr .

    EQ   shift, and go to state 64
    LT   shift, and go to state 65
    LTE  shift, and go to state 66
    '+'  shift, and go to state 67
    '-'  shift, and go to state 68
    '*'  shift, and go to state 69
    '/'  shift, and go to state 70
    '@'  shift, and go to state 71
    '.'  shift, and go to state 72

    $default  reduce using rule 44 (expr_list)


State 79

   21 expr: ID '(' expr_list . ')'
   45 expr_list: expr_list . ',' expr

    ')'  shift, and go to state 99
    ','  shift, and go to state 100


State 80

   23 expr: T_while expr T_loop . expr T_pool

    ID        shift, and go to state 34
    STRING    shift, and go to state 35
    NUM       shift, and go to state 36
    T_true    shift, and go to state 37
    T_false   shift, and go to state 38
    T_while   shift, and go to state 39
    T_if      shift, and go to state 40
    T_isvoid  shift, and go to state 41
    T_new     shift, and go to state 42
    T_not     shift, and go to state 43
    T_let     shift, and go to state 44
    T_case    shift, and go to state 45
    '{'       shift, and go to state 46
    '('       shift, and go to state 47

    expr  go to state 101


State 81

   22 expr: T_if expr T_then . expr T_else expr T_fi

    ID        shift, and go to state 34
    STRING    shift, and go to state 35
    NUM       shift, and go to state 36
    T_true    shift, and go to state 37
    T_false   shift, and go to state 38
    T_while   shift, and go to state 39
    T_if      shift, and go to state 40
    T_isvoid  shift, and go to state 41
    T_new     shift, and go to state 42
    T_not     shift, and go to state 43
    T_let     shift, and go to state 44
    T_case    shift, and go to state 45
    '{'       shift, and go to state 46
    '('       shift, and go to state 47

    expr  go to state 102


State 82

   25 expr: T_let ID ':' . TYPE let_atrib let_stmt T_in expr

    TYPE  shift, and go to state 103


State 83

   26 expr: T_case expr T_of . case_stmt T_esac

    ID  shift, and go to state 104

    case_stmt  go to state 105


State 84

   46 expr_stmt: expr ';' .

    $default  reduce using rule 46 (expr_stmt)


State 85

   24 expr: '{' expr_stmt '}' .

    $default  reduce using rule 24 (expr)


State 86

   16 expr: expr . '.' ID '(' ')'
   17     | expr . '@' TYPE '.' ID '(' ')'
   18     | expr . '.' ID '(' expr_list ')'
   19     | expr . '@' TYPE '.' ID '(' expr_list ')'
   29     | expr . '+' expr
   30     | expr . '-' expr
   31     | expr . '*' expr
   32     | expr . '/' expr
   33     | expr . EQ expr
   34     | expr . LT expr
   35     | expr . LTE expr
   47 expr_stmt: expr_stmt expr . ';'

    EQ   shift, and go to state 64
    LT   shift, and go to state 65
    LTE  shift, and go to state 66
    '+'  shift, and go to state 67
    '-'  shift, and go to state 68
    '*'  shift, and go to state 69
    '/'  shift, and go to state 70
    '@'  shift, and go to state 71
    '.'  shift, and go to state 72
    ';'  shift, and go to state 106


State 87

   37 expr: '(' expr ')' .

    $default  reduce using rule 37 (expr)


State 88

   16 expr: expr . '.' ID '(' ')'
   17     | expr . '@' TYPE '.' ID '(' ')'
   18     | expr . '.' ID '(' expr_list ')'
   19     | expr . '@' TYPE '.' ID '(' expr_list ')'
   29     | expr . '+' expr
   30     | expr . '-' expr
   31     | expr . '*' expr
   32     | expr . '/' expr
   33     | expr . EQ expr
   33     | expr EQ expr .
   34     | expr . LT expr
   35     | expr . LTE expr

    LT   shift, and go to state 65
    LTE  shift, and go to state 66
    '@'  shift, and go to state 71
    '.'  shift, and go to state 72

    $default  reduce using rule 33 (expr)


State 89

   16 expr: expr . '.' ID '(' ')'
   17     | expr . '@' TYPE '.' ID '(' ')'
   18     | expr . '.' ID '(' expr_list ')'
   19     | expr . '@' TYPE '.' ID '(' expr_list ')'
   29     | expr . '+' expr
   30     | expr . '-' expr
   31     | expr . '*' expr
   32     | expr . '/' expr
   33     | expr . EQ expr
   34     | expr . LT expr
   34     | expr LT expr .
   35     | expr . LTE expr

    '@'  shift, and go to state 71
    '.'  shift, and go to state 72

    $default  reduce using rule 34 (expr)


State 90

   16 expr: expr . '.' ID '(' ')'
   17     | expr . '@' TYPE '.' ID '(' ')'
   18     | expr . '.' ID '(' expr_list ')'
   19     | expr . '@' TYPE '.' ID '(' expr_list ')'
   29     | expr . '+' expr
   30     | expr . '-' expr
   31     | expr . '*' expr
   32     | expr . '/' expr
   33     | expr . EQ expr
   34     | expr . LT expr
   35     | expr . LTE expr
   35     | expr LTE expr .

    LT   shift, and go to state 65
    '@'  shift, and go to state 71
    '.'  shift, and go to state 72

    $default  reduce using rule 35 (expr)


State 91

   16 expr: expr . '.' ID '(' ')'
   17     | expr . '@' TYPE '.' ID '(' ')'
   18     | expr . '.' ID '(' expr_list ')'
   19     | expr . '@' TYPE '.' ID '(' expr_list ')'
   29     | expr . '+' expr
   29     | expr '+' expr .
   30     | expr . '-' expr
   31     | expr . '*' expr
   32     | expr . '/' expr
   33     | expr . EQ expr
   34     | expr . LT expr
   35     | expr . LTE expr

    EQ   shift, and go to state 64
    LT   shift, and go to state 65
    LTE  shift, and go to state 66
    '*'  shift, and go to state 69
    '/'  shift, and go to state 70
    '@'  shift, and go to state 71
    '.'  shift, and go to state 72

    $default  reduce using rule 29 (expr)


State 92

   16 expr: expr . '.' ID '(' ')'
   17     | expr . '@' TYPE '.' ID '(' ')'
   18     | expr . '.' ID '(' expr_list ')'
   19     | expr . '@' TYPE '.' ID '(' expr_list ')'
   29     | expr . '+' expr
   30     | expr . '-' expr
   30     | expr '-' expr .
   31     | expr . '*' expr
   32     | expr . '/' expr
   33     | expr . EQ expr
   34     | expr . LT expr
   35     | expr . LTE expr

    EQ   shift, and go to state 64
    LT   shift, and go to state 65
    LTE  shift, and go to state 66
    '*'  shift, and go to state 69
    '/'  shift, and go to state 70
    '@'  shift, and go to state 71
    '.'  shift, and go to state 72

    $default  reduce using rule 30 (expr)


State 93

   16 expr: expr . '.' ID '(' ')'
   17     | expr . '@' TYPE '.' ID '(' ')'
   18     | expr . '.' ID '(' expr_list ')'
   19     | expr . '@' TYPE '.' ID '(' expr_list ')'
   29     | expr . '+' expr
   30     | expr . '-' expr
   31     | expr . '*' expr
   31     | expr '*' expr .
   32     | expr . '/' expr
   33     | expr . EQ expr
   34     | expr . LT expr
   35     | expr . LTE expr

    EQ   shift, and go to state 64
    LT   shift, and go to state 65
    LTE  shift, and go to state 66
    '@'  shift, and go to state 71
    '.'  shift, and go to state 72

    $default  reduce using rule 31 (expr)


State 94

   16 expr: expr . '.' ID '(' ')'
   17     | expr . '@' TYPE '.' ID '(' ')'
   18     | expr . '.' ID '(' expr_list ')'
   19     | expr . '@' TYPE '.' ID '(' expr_list ')'
   29     | expr . '+' expr
   30     | expr . '-' expr
   31     | expr . '*' expr
   32     | expr . '/' expr
   32     | expr '/' expr .
   33     | expr . EQ expr
   34     | expr . LT expr
   35     | expr . LTE expr

    EQ   shift, and go to state 64
    LT   shift, and go to state 65
    LTE  shift, and go to state 66
    '@'  shift, and go to state 71
    '.'  shift, and go to state 72

    $default  reduce using rule 32 (expr)


State 95

   17 expr: expr '@' TYPE . '.' ID '(' ')'
   19     | expr '@' TYPE . '.' ID '(' expr_list ')'

    '.'  shift, and go to state 107


State 96

   16 expr: expr '.' ID . '(' ')'
   18     | expr '.' ID . '(' expr_list ')'

    '('  shift, and go to state 108


State 97

    9 feature: ID '(' ')' ':' TYPE '{' expr '}' .

    $default  reduce using rule 9 (feature)


State 98

   10 feature: ID '(' formal_list ')' ':' TYPE '{' expr . '}'
   16 expr: expr . '.' ID '(' ')'
   17     | expr . '@' TYPE '.' ID '(' ')'
   18     | expr . '.' ID '(' expr_list ')'
   19     | expr . '@' TYPE '.' ID '(' expr_list ')'
   29     | expr . '+' expr
   30     | expr . '-' expr
   31     | expr . '*' expr
   32     | expr . '/' expr
   33     | expr . EQ expr
   34     | expr . LT expr
   35     | expr . LTE expr

    EQ   shift, and go to state 64
    LT   shift, and go to state 65
    LTE  shift, and go to state 66
    '+'  shift, and go to state 67
    '-'  shift, and go to state 68
    '*'  shift, and go to state 69
    '/'  shift, and go to state 70
    '@'  shift, and go to state 71
    '.'  shift, and go to state 72
    '}'  shift, and go to state 109


State 99

   21 expr: ID '(' expr_list ')' .

    $default  reduce using rule 21 (expr)


State 100

   45 expr_list: expr_list ',' . expr

    ID        shift, and go to state 34
    STRING    shift, and go to state 35
    NUM       shift, and go to state 36
    T_true    shift, and go to state 37
    T_false   shift, and go to state 38
    T_while   shift, and go to state 39
    T_if      shift, and go to state 40
    T_isvoid  shift, and go to state 41
    T_new     shift, and go to state 42
    T_not     shift, and go to state 43
    T_let     shift, and go to state 44
    T_case    shift, and go to state 45
    '{'       shift, and go to state 46
    '('       shift, and go to state 47

    expr  go to state 110


State 101

   16 expr: expr . '.' ID '(' ')'
   17     | expr . '@' TYPE '.' ID '(' ')'
   18     | expr . '.' ID '(' expr_list ')'
   19     | expr . '@' TYPE '.' ID '(' expr_list ')'
   23     | T_while expr T_loop expr . T_pool
   29     | expr . '+' expr
   30     | expr . '-' expr
   31     | expr . '*' expr
   32     | expr . '/' expr
   33     | expr . EQ expr
   34     | expr . LT expr
   35     | expr . LTE expr

    EQ      shift, and go to state 64
    LT      shift, and go to state 65
    LTE     shift, and go to state 66
    T_pool  shift, and go to state 111
    '+'     shift, and go to state 67
    '-'     shift, and go to state 68
    '*'     shift, and go to state 69
    '/'     shift, and go to state 70
    '@'     shift, and go to state 71
    '.'     shift, and go to state 72


State 102

   16 expr: expr . '.' ID '(' ')'
   17     | expr . '@' TYPE '.' ID '(' ')'
   18     | expr . '.' ID '(' expr_list ')'
   19     | expr . '@' TYPE '.' ID '(' expr_list ')'
   22     | T_if expr T_then expr . T_else expr T_fi
   29     | expr . '+' expr
   30     | expr . '-' expr
   31     | expr . '*' expr
   32     | expr . '/' expr
   33     | expr . EQ expr
   34     | expr . LT expr
   35     | expr . LTE expr

    EQ      shift, and go to state 64
    LT      shift, and go to state 65
    LTE     shift, and go to state 66
    T_else  shift, and go to state 112
    '+'     shift, and go to state 67
    '-'     shift, and go to state 68
    '*'     shift, and go to state 69
    '/'     shift, and go to state 70
    '@'     shift, and go to state 71
    '.'     shift, and go to state 72


State 103

   25 expr: T_let ID ':' TYPE . let_atrib let_stmt T_in expr

    T_atrib  shift, and go to state 113

    $default  reduce using rule 48 (let_atrib)

    let_atrib  go to state 114


State 104

   52 case_stmt: ID . ':' TYPE T_impl expr ';'

    ':'  shift, and go to state 115


State 105

   26 expr: T_case expr T_of case_stmt . T_esac
   53 case_stmt: case_stmt . ID ':' TYPE T_impl expr ';'

    ID      shift, and go to state 116
    T_esac  shift, and go to state 117


State 106

   47 expr_stmt: expr_stmt expr ';' .

    $default  reduce using rule 47 (expr_stmt)


State 107

   17 expr: expr '@' TYPE '.' . ID '(' ')'
   19     | expr '@' TYPE '.' . ID '(' expr_list ')'

    ID  shift, and go to state 118


State 108

   16 expr: expr '.' ID '(' . ')'
   18     | expr '.' ID '(' . expr_list ')'

    ID        shift, and go to state 34
    STRING    shift, and go to state 35
    NUM       shift, and go to state 36
    T_true    shift, and go to state 37
    T_false   shift, and go to state 38
    T_while   shift, and go to state 39
    T_if      shift, and go to state 40
    T_isvoid  shift, and go to state 41
    T_new     shift, and go to state 42
    T_not     shift, and go to state 43
    T_let     shift, and go to state 44
    T_case    shift, and go to state 45
    '{'       shift, and go to state 46
    '('       shift, and go to state 47
    ')'       shift, and go to state 119

    expr       go to state 78
    expr_list  go to state 120


State 109

   10 feature: ID '(' formal_list ')' ':' TYPE '{' expr '}' .

    $default  reduce using rule 10 (feature)


State 110

   16 expr: expr . '.' ID '(' ')'
   17     | expr . '@' TYPE '.' ID '(' ')'
   18     | expr . '.' ID '(' expr_list ')'
   19     | expr . '@' TYPE '.' ID '(' expr_list ')'
   29     | expr . '+' expr
   30     | expr . '-' expr
   31     | expr . '*' expr
   32     | expr . '/' expr
   33     | expr . EQ expr
   34     | expr . LT expr
   35     | expr . LTE expr
   45 expr_list: expr_list ',' expr .

    EQ   shift, and go to state 64
    LT   shift, and go to state 65
    LTE  shift, and go to state 66
    '+'  shift, and go to state 67
    '-'  shift, and go to state 68
    '*'  shift, and go to state 69
    '/'  shift, and go to state 70
    '@'  shift, and go to state 71
    '.'  shift, and go to state 72

    $default  reduce using rule 45 (expr_list)


State 111

   23 expr: T_while expr T_loop expr T_pool .

    $default  reduce using rule 23 (expr)


State 112

   22 expr: T_if expr T_then expr T_else . expr T_fi

    ID        shift, and go to state 34
    STRING    shift, and go to state 35
    NUM       shift, and go to state 36
    T_true    shift, and go to state 37
    T_false   shift, and go to state 38
    T_while   shift, and go to state 39
    T_if      shift, and go to state 40
    T_isvoid  shift, and go to state 41
    T_new     shift, and go to state 42
    T_not     shift, and go to state 43
    T_let     shift, and go to state 44
    T_case    shift, and go to state 45
    '{'       shift, and go to state 46
    '('       shift, and go to state 47

    expr  go to state 121


State 113

   49 let_atrib: T_atrib . expr

    ID        shift, and go to state 34
    STRING    shift, and go to state 35
    NUM       shift, and go to state 36
    T_true    shift, and go to state 37
    T_false   shift, and go to state 38
    T_while   shift, and go to state 39
    T_if      shift, and go to state 40
    T_isvoid  shift, and go to state 41
    T_new     shift, and go to state 42
    T_not     shift, and go to state 43
    T_let     shift, and go to state 44
    T_case    shift, and go to state 45
    '{'       shift, and go to state 46
    '('       shift, and go to state 47

    expr  go to state 122


State 114

   25 expr: T_let ID ':' TYPE let_atrib . let_stmt T_in expr

    ','  shift, and go to state 123

    $default  reduce using rule 50 (let_stmt)

    let_stmt  go to state 124


State 115

   52 case_stmt: ID ':' . TYPE T_impl expr ';'

    TYPE  shift, and go to state 125


State 116

   53 case_stmt: case_stmt ID . ':' TYPE T_impl expr ';'

    ':'  shift, and go to state 126


State 117

   26 expr: T_case expr T_of case_stmt T_esac .

    $default  reduce using rule 26 (expr)


State 118

   17 expr: expr '@' TYPE '.' ID . '(' ')'
   19     | expr '@' TYPE '.' ID . '(' expr_list ')'

    '('  shift, and go to state 127


State 119

   16 expr: expr '.' ID '(' ')' .

    $default  reduce using rule 16 (expr)


State 120

   18 expr: expr '.' ID '(' expr_list . ')'
   45 expr_list: expr_list . ',' expr

    ')'  shift, and go to state 128
    ','  shift, and go to state 100


State 121

   16 expr: expr . '.' ID '(' ')'
   17     | expr . '@' TYPE '.' ID '(' ')'
   18     | expr . '.' ID '(' expr_list ')'
   19     | expr . '@' TYPE '.' ID '(' expr_list ')'
   22     | T_if expr T_then expr T_else expr . T_fi
   29     | expr . '+' expr
   30     | expr . '-' expr
   31     | expr . '*' expr
   32     | expr . '/' expr
   33     | expr . EQ expr
   34     | expr . LT expr
   35     | expr . LTE expr

    EQ    shift, and go to state 64
    LT    shift, and go to state 65
    LTE   shift, and go to state 66
    T_fi  shift, and go to state 129
    '+'   shift, and go to state 67
    '-'   shift, and go to state 68
    '*'   shift, and go to state 69
    '/'   shift, and go to state 70
    '@'   shift, and go to state 71
    '.'   shift, and go to state 72


State 122

   16 expr: expr . '.' ID '(' ')'
   17     | expr . '@' TYPE '.' ID '(' ')'
   18     | expr . '.' ID '(' expr_list ')'
   19     | expr . '@' TYPE '.' ID '(' expr_list ')'
   29     | expr . '+' expr
   30     | expr . '-' expr
   31     | expr . '*' expr
   32     | expr . '/' expr
   33     | expr . EQ expr
   34     | expr . LT expr
   35     | expr . LTE expr
   49 let_atrib: T_atrib expr .

    EQ   shift, and go to state 64
    LT   shift, and go to state 65
    LTE  shift, and go to state 66
    '+'  shift, and go to state 67
    '-'  shift, and go to state 68
    '*'  shift, and go to state 69
    '/'  shift, and go to state 70
    '@'  shift, and go to state 71
    '.'  shift, and go to state 72

    $default  reduce using rule 49 (let_atrib)


State 123

   51 let_stmt: ',' . ID ':' TYPE let_atrib let_stmt

    ID  shift, and go to state 130


State 124

   25 expr: T_let ID ':' TYPE let_atrib let_stmt . T_in expr

    T_in  shift, and go to state 131


State 125

   52 case_stmt: ID ':' TYPE . T_impl expr ';'

    T_impl  shift, and go to state 132


State 126

   53 case_stmt: case_stmt ID ':' . TYPE T_impl expr ';'

    TYPE  shift, and go to state 133


State 127

   17 expr: expr '@' TYPE '.' ID '(' . ')'
   19     | expr '@' TYPE '.' ID '(' . expr_list ')'

    ID        shift, and go to state 34
    STRING    shift, and go to state 35
    NUM       shift, and go to state 36
    T_true    shift, and go to state 37
    T_false   shift, and go to state 38
    T_while   shift, and go to state 39
    T_if      shift, and go to state 40
    T_isvoid  shift, and go to state 41
    T_new     shift, and go to state 42
    T_not     shift, and go to state 43
    T_let     shift, and go to state 44
    T_case    shift, and go to state 45
    '{'       shift, and go to state 46
    '('       shift, and go to state 47
    ')'       shift, and go to state 134

    expr       go to state 78
    expr_list  go to state 135


State 128

   18 expr: expr '.' ID '(' expr_list ')' .

    $default  reduce using rule 18 (expr)


State 129

   22 expr: T_if expr T_then expr T_else expr T_fi .

    $default  reduce using rule 22 (expr)


State 130

   51 let_stmt: ',' ID . ':' TYPE let_atrib let_stmt

    ':'  shift, and go to state 136


State 131

   25 expr: T_let ID ':' TYPE let_atrib let_stmt T_in . expr

    ID        shift, and go to state 34
    STRING    shift, and go to state 35
    NUM       shift, and go to state 36
    T_true    shift, and go to state 37
    T_false   shift, and go to state 38
    T_while   shift, and go to state 39
    T_if      shift, and go to state 40
    T_isvoid  shift, and go to state 41
    T_new     shift, and go to state 42
    T_not     shift, and go to state 43
    T_let     shift, and go to state 44
    T_case    shift, and go to state 45
    '{'       shift, and go to state 46
    '('       shift, and go to state 47

    expr  go to state 137


State 132

   52 case_stmt: ID ':' TYPE T_impl . expr ';'

    ID        shift, and go to state 34
    STRING    shift, and go to state 35
    NUM       shift, and go to state 36
    T_true    shift, and go to state 37
    T_false   shift, and go to state 38
    T_while   shift, and go to state 39
    T_if      shift, and go to state 40
    T_isvoid  shift, and go to state 41
    T_new     shift, and go to state 42
    T_not     shift, and go to state 43
    T_let     shift, and go to state 44
    T_case    shift, and go to state 45
    '{'       shift, and go to state 46
    '('       shift, and go to state 47

    expr  go to state 138


State 133

   53 case_stmt: case_stmt ID ':' TYPE . T_impl expr ';'

    T_impl  shift, and go to state 139


State 134

   17 expr: expr '@' TYPE '.' ID '(' ')' .

    $default  reduce using rule 17 (expr)


State 135

   19 expr: expr '@' TYPE '.' ID '(' expr_list . ')'
   45 expr_list: expr_list . ',' expr

    ')'  shift, and go to state 140
    ','  shift, and go to state 100


State 136

   51 let_stmt: ',' ID ':' . TYPE let_atrib let_stmt

    TYPE  shift, and go to state 141


State 137

   16 expr: expr . '.' ID '(' ')'
   17     | expr . '@' TYPE '.' ID '(' ')'
   18     | expr . '.' ID '(' expr_list ')'
   19     | expr . '@' TYPE '.' ID '(' expr_list ')'
   25     | T_let ID ':' TYPE let_atrib let_stmt T_in expr .
   29     | expr . '+' expr
   30     | expr . '-' expr
   31     | expr . '*' expr
   32     | expr . '/' expr
   33     | expr . EQ expr
   34     | expr . LT expr
   35     | expr . LTE expr

    EQ   shift, and go to state 64
    LT   shift, and go to state 65
    LTE  shift, and go to state 66
    '+'  shift, and go to state 67
    '-'  shift, and go to state 68
    '*'  shift, and go to state 69
    '/'  shift, and go to state 70
    '@'  shift, and go to state 71
    '.'  shift, and go to state 72

    $default  reduce using rule 25 (expr)


State 138

   16 expr: expr . '.' ID '(' ')'
   17     | expr . '@' TYPE '.' ID '(' ')'
   18     | expr . '.' ID '(' expr_list ')'
   19     | expr . '@' TYPE '.' ID '(' expr_list ')'
   29     | expr . '+' expr
   30     | expr . '-' expr
   31     | expr . '*' expr
   32     | expr . '/' expr
   33     | expr . EQ expr
   34     | expr . LT expr
   35     | expr . LTE expr
   52 case_stmt: ID ':' TYPE T_impl expr . ';'

    EQ   shift, and go to state 64
    LT   shift, and go to state 65
    LTE  shift, and go to state 66
    '+'  shift, and go to state 67
    '-'  shift, and go to state 68
    '*'  shift, and go to state 69
    '/'  shift, and go to state 70
    '@'  shift, and go to state 71
    '.'  shift, and go to state 72
    ';'  shift, and go to state 142


State 139

   53 case_stmt: case_stmt ID ':' TYPE T_impl . expr ';'

    ID        shift, and go to state 34
    STRING    shift, and go to state 35
    NUM       shift, and go to state 36
    T_true    shift, and go to state 37
    T_false   shift, and go to state 38
    T_while   shift, and go to state 39
    T_if      shift, and go to state 40
    T_isvoid  shift, and go to state 41
    T_new     shift, and go to state 42
    T_not     shift, and go to state 43
    T_let     shift, and go to state 44
    T_case    shift, and go to state 45
    '{'       shift, and go to state 46
    '('       shift, and go to state 47

    expr  go to state 143


State 140

   19 expr: expr '@' TYPE '.' ID '(' expr_list ')' .

    $default  reduce using rule 19 (expr)


State 141

   51 let_stmt: ',' ID ':' TYPE . let_atrib let_stmt

    T_atrib  shift, and go to state 113

    $default  reduce using rule 48 (let_atrib)

    let_atrib  go to state 144


State 142

   52 case_stmt: ID ':' TYPE T_impl expr ';' .

    $default  reduce using rule 52 (case_stmt)


State 143

   16 expr: expr . '.' ID '(' ')'
   17     | expr . '@' TYPE '.' ID '(' ')'
   18     | expr . '.' ID '(' expr_list ')'
   19     | expr . '@' TYPE '.' ID '(' expr_list ')'
   29     | expr . '+' expr
   30     | expr . '-' expr
   31     | expr . '*' expr
   32     | expr . '/' expr
   33     | expr . EQ expr
   34     | expr . LT expr
   35     | expr . LTE expr
   53 case_stmt: case_stmt ID ':' TYPE T_impl expr . ';'

    EQ   shift, and go to state 64
    LT   shift, and go to state 65
    LTE  shift, and go to state 66
    '+'  shift, and go to state 67
    '-'  shift, and go to state 68
    '*'  shift, and go to state 69
    '/'  shift, and go to state 70
    '@'  shift, and go to state 71
    '.'  shift, and go to state 72
    ';'  shift, and go to state 145


State 144

   51 let_stmt: ',' ID ':' TYPE let_atrib . let_stmt

    ','  shift, and go to state 123

    $default  reduce using rule 50 (let_stmt)

    let_stmt  go to state 146


State 145

   53 case_stmt: case_stmt ID ':' TYPE T_impl expr ';' .

    $default  reduce using rule 53 (case_stmt)


State 146

   51 let_stmt: ',' ID ':' TYPE let_atrib let_stmt .

    $default  reduce using rule 51 (let_stmt)
